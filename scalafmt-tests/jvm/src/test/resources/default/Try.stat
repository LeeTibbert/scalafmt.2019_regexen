80 columns                                                                     |
<<< finally
object Foo {
  try loop(blocks, startingImports, Imports(), wrapperIndex = 1 )
  finally scriptImportCallback = outerScriptImportCallback
}
>>>
object Foo {
  try loop(blocks, startingImports, Imports(), wrapperIndex = 1)
  finally scriptImportCallback = outerScriptImportCallback
}
<<< catch/finally no curly
object Foo {
  try loop(blocks, startingImports, Imports(), wrapperIndex = 1 )
  catch fallback
  finally scriptImportCallback = outerScriptImportCallback
}
>>>
object Foo {
  try loop(blocks, startingImports, Imports(), wrapperIndex = 1)
  catch fallback
  finally scriptImportCallback = outerScriptImportCallback
}
<<< catch/finally with curly
object Foo {
  try {
  loop(blocks, startingImports, Imports(), wrapperIndex = 1 )
  } catch fallback
  finally scriptImportCallback = outerScriptImportCallback
}
>>>
object Foo {
  try {
    loop(blocks, startingImports, Imports(), wrapperIndex = 1)
  } catch fallback
  finally scriptImportCallback = outerScriptImportCallback
}
<<< #350 2
object Foo {
  try proc.waitFor()
  catch {case e: Throwable => run() }
}
>>>
object Foo {
  try proc.waitFor()
  catch { case e: Throwable => run() }
}
<<< try/finally curly no single line blocks
object Foo {
  try { foo()  }
  finally {  bar()  }
}
>>>
object Foo {
  try {
    foo()
  } finally {
    bar()
  }
}
<<< try/catch with handler
try { foo()  } catch handler
>>>
try {
  foo()
} catch handler
